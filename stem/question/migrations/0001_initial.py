# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-04-27 21:11
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cheat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('order', models.IntegerField(default=0, verbose_name='Órden de las pistas, del 0 a n')),
            ],
            options={
                'verbose_name_plural': 'Pistas',
                'verbose_name': 'Pista',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('question_type', models.CharField(default=0, help_text='Texto, cuestionario, etc', max_length=128, verbose_name='Tipo de pregunta')),
                ('image', models.ImageField(null=True, upload_to='', verbose_name='Imagen que se mostrará en la cabecera de la pregunta')),
            ],
            options={
                'verbose_name_plural': 'Preguntas',
                'verbose_name': 'Pregunta',
            },
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('name', models.CharField(max_length=128, verbose_name='Nombre de la historia')),
                ('context', models.TextField(help_text='Ejemplo: Florinda y Torcuato están preparándose para una aventura...', verbose_name='Contexto en el que se desarrolla el juego')),
                ('min_age', models.IntegerField(default=10, verbose_name='Edad mínima recomendada')),
                ('max_age', models.IntegerField(default=13, verbose_name='Edad máxima recomendada')),
            ],
            options={
                'verbose_name_plural': 'Historias',
                'verbose_name': 'Historia',
            },
        ),
        migrations.CreateModel(
            name='TestOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('is_active', models.BooleanField(default=True, verbose_name='¿Quiere que esta opción sea visible?')),
                ('text', models.CharField(max_length=512, verbose_name='Opción de pregunta tipo test')),
            ],
            options={
                'verbose_name_plural': 'Opciones a responder en pregunta de tipo test',
                'verbose_name': 'Opción a responder en pregunta de tipo test',
            },
        ),
        migrations.CreateModel(
            name='TestQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.Question')),
            ],
            options={
                'verbose_name_plural': 'Preguntas de tipo test',
                'verbose_name': 'Pregunta de tipo test',
            },
        ),
        migrations.CreateModel(
            name='TestQuestionAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('answer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='question.TestOption')),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='question.TestQuestion')),
            ],
            options={
                'verbose_name': '',
            },
        ),
        migrations.CreateModel(
            name='TextQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('text', models.TextField(verbose_name='Enunciado de la pregunta.')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.Question')),
            ],
            options={
                'verbose_name_plural': 'Preguntas de tipo texto',
                'verbose_name': 'Pregunta de tipo texto',
            },
        ),
        migrations.CreateModel(
            name='TextQuestionAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('modification_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('answer', models.TextField(verbose_name='Respuesta a la pregunta')),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='textanswer', to='question.TextQuestion')),
            ],
            options={
                'verbose_name_plural': 'Respuestas a preguntas de texto',
                'verbose_name': 'Respuesta a pregunta de texto',
            },
        ),
        migrations.AddField(
            model_name='testoption',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.TestQuestion'),
        ),
        migrations.AddField(
            model_name='question',
            name='story',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.Story'),
        ),
        migrations.AddField(
            model_name='cheat',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.Question'),
        ),
    ]
